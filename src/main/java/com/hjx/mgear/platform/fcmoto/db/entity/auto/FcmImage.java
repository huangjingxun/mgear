package com.hjx.mgear.platform.fcmoto.db.entity.auto;

import java.io.Serializable;

/**
 *
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table fcm_image
 *
 * @mbg.generated do_not_delete_during_merge
 */
public class FcmImage implements Serializable {

    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database column fcm_image.id
     * @mbg.generated
     */
    private Integer id;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database column fcm_image.web_root
     * @mbg.generated
     */
    private String webRoot;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database column fcm_image.file_name
     * @mbg.generated
     */
    private String fileName;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table fcm_image
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator. This method returns the value of the database column fcm_image.id
     * @return  the value of fcm_image.id
     * @mbg.generated
     */
    public Integer getId() {

        return id;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table fcm_image
     * @mbg.generated
     */
    public FcmImage withId(Integer id) {

        this.setId(id);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator. This method sets the value of the database column fcm_image.id
     * @param id  the value for fcm_image.id
     * @mbg.generated
     */
    public void setId(Integer id) {

        this.id = id;
    }

    /**
     * This method was generated by MyBatis Generator. This method returns the value of the database column fcm_image.web_root
     * @return  the value of fcm_image.web_root
     * @mbg.generated
     */
    public String getWebRoot() {

        return webRoot;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table fcm_image
     * @mbg.generated
     */
    public FcmImage withWebRoot(String webRoot) {

        this.setWebRoot(webRoot);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator. This method sets the value of the database column fcm_image.web_root
     * @param webRoot  the value for fcm_image.web_root
     * @mbg.generated
     */
    public void setWebRoot(String webRoot) {

        this.webRoot = webRoot;
    }

    /**
     * This method was generated by MyBatis Generator. This method returns the value of the database column fcm_image.file_name
     * @return  the value of fcm_image.file_name
     * @mbg.generated
     */
    public String getFileName() {

        return fileName;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table fcm_image
     * @mbg.generated
     */
    public FcmImage withFileName(String fileName) {

        this.setFileName(fileName);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator. This method sets the value of the database column fcm_image.file_name
     * @param fileName  the value for fcm_image.file_name
     * @mbg.generated
     */
    public void setFileName(String fileName) {

        this.fileName = fileName;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table fcm_image
     * @mbg.generated
     */
    @Override
    public String toString() {

        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", webRoot=").append(webRoot);
        sb.append(", fileName=").append(fileName);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table fcm_image
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {

        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        FcmImage other = (FcmImage) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId())) && (this.getWebRoot() == null ? other.getWebRoot() == null
                                                                                                                                 : this.getWebRoot().equals(other.getWebRoot())) && (this
                                                                                                                                                                                         .getFileName() == null ? other.getFileName() == null
                                                                                                                                                                                                                : this.getFileName()
                                                                                                                                                                                                                      .equals(other.getFileName()));
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table fcm_image
     * @mbg.generated
     */
    @Override
    public int hashCode() {

        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getWebRoot() == null) ? 0 : getWebRoot().hashCode());
        result = prime * result + ((getFileName() == null) ? 0 : getFileName().hashCode());
        return result;
    }
}